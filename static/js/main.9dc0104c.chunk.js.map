{"version":3,"sources":["components/FeedbackWidget/FeedbackControls/FeedbackControls.styled.js","components/FeedbackWidget/FeedbackControls/FeedbackControls.jsx","components/FeedbackWidget/Section/Section.jsx","components/FeedbackWidget/Statistics/Statistics.jsx","components/FeedbackWidget/Notification/Notification.jsx","App.js","index.js"],"names":["Button","styled","button","FeedbackControls","options","onButtonClick","map","option","type","onClick","Section","title","children","Statistics","good","neutral","bad","total","positiveFeedback","Notification","message","App","useState","setGood","setNeutral","setBad","CountTotalFeedback","Math","round","CountPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAEaA,E,KAASC,EAAOC,OAAV,kL,OCCZ,SAASC,EAAT,GAAsD,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,cACxC,OACID,EAAQE,KAAI,SAAAC,GACZ,OAAQ,cAACP,EAAD,CAAQQ,KAAK,SAAsBC,QAAS,kBAAMJ,EAAcE,IAAhE,SACHA,GAD8BA,MCJpC,SAASG,EAAT,GAAsC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SACjC,OAAO,oCACP,6BAAKD,IACJC,KCHM,SAASC,EAAT,GAAqE,IAA/CC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,IAAKC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,iBACxD,OACI,gCACA,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,UCPG,SAASC,EAAT,GAAkC,IAAXC,EAAU,EAAVA,QAC1B,OAAO,8BACH,4BAAIA,MCEG,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOP,EAAP,KAAgBS,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAON,EAAP,KAAYS,EAAZ,KAiBA,SAASC,IACP,OAAOZ,EAAOC,EAAUC,EAQ1B,OACE,qCACE,cAACN,EAAD,CAASC,MAAO,6BAAhB,SACE,cAACR,EAAD,CAAkBC,QA3BR,CAAC,OAAQ,UAAW,OA2BMC,cAzB1C,SAAyBE,GACvB,OAAQA,GACN,IAAK,OACH,OAAOgB,EAAQT,EAAO,GACxB,IAAK,UACH,OAAOU,EAAWT,EAAU,GAC9B,IAAK,MACH,OAAOU,EAAOT,EAAM,GACtB,QACE,aAkBF,eAACN,EAAD,CAASC,MAAO,aAAhB,UACGe,IAAuB,GACtB,cAACb,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOS,IACPR,iBAjBV,WACE,IAAMD,EAAQS,IACd,OAAOC,KAAKC,MAAOd,EAAOG,EAAS,KAeTY,KAGI,IAAzBH,KACC,cAACP,EAAD,CAAcC,QAAS,4B,MC9CjCU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACX,EAAD,MAEFY,SAASC,eAAe,W","file":"static/js/main.9dc0104c.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Button = styled.button`\n  margin-right: 5px;\n  background-color: white;\n  border: 1px solid grey;\n  border-radius: 10%;\n  &:hover {\n    background-color: #63c5da;\n  }\n`;\n","import React from \"react\";\r\nimport { Button } from \"./FeedbackControls.styled\";\r\n\r\nexport function FeedbackControls ({options, onButtonClick}) {\r\n    return (\r\n        options.map(option => {\r\n        return (<Button type='button' key={option} onClick={() => onButtonClick(option)}>\r\n            {option}\r\n        </Button>)\r\n        }) \r\n    );\r\n}","import React from \"react\";\r\n\r\nexport function Section ({title, children}) {\r\nreturn <section>\r\n<h2>{title}</h2>\r\n{children}\r\n</section>\r\n}","import React from \"react\";\r\n\r\nexport function Statistics ({good, neutral, bad, total, positiveFeedback}) {\r\nreturn (\r\n    <div>\r\n    <p>Good: {good}</p>\r\n    <p>Neutral: {neutral}</p>\r\n    <p>Bad: {bad}</p>\r\n    <p>Total: {total}</p>\r\n    <p>Positive feedback: {positiveFeedback}%</p>\r\n    </div>\r\n)\r\n}","import React from \"react\";\r\n\r\nexport function Notification({message}) {\r\n    return <div>\r\n        <p>{message}</p>\r\n        </div>\r\n};","import { useState } from \"react\";\nimport { FeedbackControls } from \"./components/FeedbackWidget/FeedbackControls/FeedbackControls\";\nimport { Section } from \"./components/FeedbackWidget/Section/Section\";\nimport { Statistics } from \"./components/FeedbackWidget/Statistics/Statistics\";\nimport { Notification } from \"./components/FeedbackWidget/Notification/Notification\";\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const options = [\"good\", \"neutral\", \"bad\"];\n\n  function FeedbackOptions(option) {\n    switch (option) {\n      case \"good\":\n        return setGood(good + 1);\n      case \"neutral\":\n        return setNeutral(neutral + 1);\n      case \"bad\":\n        return setBad(bad + 1);\n      default:\n        return;\n    }\n  }\n\n  function CountTotalFeedback() {\n    return good + neutral + bad;\n  }\n\n  function CountPositiveFeedbackPercentage() {\n    const total = CountTotalFeedback();\n    return Math.round((good / total) * 100);\n  }\n\n  return (\n    <>\n      <Section title={\"Please leave your feedback\"}>\n        <FeedbackControls options={options} onButtonClick={FeedbackOptions} />\n      </Section>\n      <Section title={\"Statistics\"}>\n        {CountTotalFeedback() > 0 && (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={CountTotalFeedback()}\n            positiveFeedback={CountPositiveFeedbackPercentage()}\n          />\n        )}\n        {CountTotalFeedback() === 0 && (\n          <Notification message={\"No feedback given\"} />\n        )}\n      </Section>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}